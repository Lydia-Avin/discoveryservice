name: CICD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest
    name: Deploy and Run Docker Images on EC2

    steps:
      # Step 1: SSH into EC2 and pull latest code, build Docker image, and deploy
      - name: SSH into EC2 and pull latest code, build Docker image, and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop any services that might be using port 80 (like Nginx or Apache)
            sudo systemctl stop nginx || echo "nginx not installed or running"

            # Install Git, Docker, and Docker Compose if not present
            if ! command -v git &> /dev/null
            then
                sudo yum install -y git
            fi
            if ! command -v docker &> /dev/null
            then
                sudo yum install -y docker
                sudo systemctl start docker
                sudo systemctl enable docker
            fi
            if ! command -v docker-compose &> /dev/null
            then
                sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Pull the latest code from the GitHub repository
            cd /path/to/your/project # Navigate to your project directory
            git checkout main
            git pull origin main

            # Build the Docker image on the EC2 instance
            TAG=$(echo ${{ github.sha }} | head -c8)
            IMAGE_NAME=discoveryservice:$TAG
            sudo docker build -t $IMAGE_NAME .

            # Debugging: Print the built image name to verify
            echo "Built Docker image: $IMAGE_NAME"

            # Clean up Docker to free space
            sudo docker container prune -f
            sudo docker image prune -a -f
            sudo docker volume prune -f
            sudo docker network prune -f

            # Run the docker-compose file in the root folder
            cd ./discoveryservice
            docker-compose down || true
            IMAGE_NAME=$IMAGE_NAME docker-compose up -d --force-recreate --build

            echo "Flask app container started successfully on port 8000"
            exit 0
